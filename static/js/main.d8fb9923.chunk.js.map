{"version":3,"sources":["types.js","reducers/movieReducer.js","reducers/index.js","store.js","actions/movieActions.js","components/movie.js","App.js","reportWebVitals.js","index.js"],"names":["FETCH_MOVIE_DATA","FETCH_MOVIE_PLOT","initialState","searchResponse","searchResultArray","totalResults","errorMessage","mapSearchResult","result","Response","response","resultArray","totalResult","Error","Search","combineReducers","movie","state","action","type","mapData","payload","map","i","imdbID","middleware","thunk","store","createStore","rootReducer","applyMiddleware","fetchMoviePlot","id","dispatch","a","fetch","json","responseJson","searchResultArraySelector","searchTotalResultsSelector","searchResponseSelector","searchErrorMessageSelector","useStyles","makeStyles","theme","root","flexGrow","margin","display","justifyContent","alignItems","height","width","heading","fontSize","typography","pxToRem","flexBasis","flexShrink","secondaryHeading","paper","padding","spacing","search","marginBottom","card","maxWidth","media","Movie","classes","useDispatch","searchResultsArray","useSelector","searchTotalResults","searchErrorMessage","useState","inputValue","setInputValue","JSON","parse","ls","get","nominatedMovies","setNominatedMovies","handleKeyPress","value","name","headers","length","handleNominate","set","stringify","nominatedArray","push","handleInnominate","filter","m","className","Grid","container","item","xs","Typography","variant","Paper","TextField","label","onChange","e","target","onKeyDown","key","Accordion","AccordionSummary","expandIcon","aria-controls","AccordionDetails","sm","Card","CardActionArea","CardMedia","image","Poster","title","CardContent","gutterBottom","component","Title","Year","color","Plot","CardActions","some","Button","size","onClick","Box","App","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d8fb9923.chunk.js","sourcesContent":["export const FETCH_MOVIE_DATA = 'FETCH_MOVIE_DATA'\nexport const FETCH_MOVIE_PLOT = 'FETCH_MOVIE_PLOT'\n","/* eslint-disable import/no-anonymous-default-export */\nimport { FETCH_MOVIE_DATA, FETCH_MOVIE_PLOT } from '../types'\n\n// redux state\nconst initialState = {\n\tsearchResponse: false,\n\tsearchResultArray: [],\n\ttotalResults: 0,\n\terrorMessage: '',\n}\n\n// map search result to the format we want, e.g. (capitalization), but data format is okay here\nconst mapSearchResult = (result) => {\n\t// false response\n\tif (result.Response === 'False') {\n\t\treturn {\n\t\t\tresponse: false,\n\t\t\tresultArray: [],\n\t\t\ttotalResult: 0,\n\t\t\terrorMessage: result.Error,\n\t\t}\n\t}\n\t// true response\n\tif (result.Response === 'True') {\n\t\treturn {\n\t\t\tresponse: true,\n\t\t\tresultArray: result.Search,\n\t\t\ttotalResults: result.totalResults,\n\t\t\terrorMessage: '',\n\t\t}\n\t}\n}\n\nexport default function (state = initialState, action) {\n\tswitch (action.type) {\n\t\tcase FETCH_MOVIE_DATA:\n\t\t\tconst mapData = mapSearchResult(action.payload)\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tsearchResponse: mapData.response,\n\t\t\t\tsearchResultArray: mapData.resultArray,\n\t\t\t\ttotalResults: mapData.totalResults,\n\t\t\t\terrorMessage: mapData.errorMessage,\n\t\t\t}\n\t\tcase FETCH_MOVIE_PLOT:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t// change movie data to specific data with plot when id matches\n\t\t\t\tsearchResultArray: state.searchResultArray.map((movie, i) =>\n\t\t\t\t\tmovie.imdbID === action.payload.imdbID ? action.payload : movie\n\t\t\t\t),\n\t\t\t}\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n","import { combineReducers } from 'redux'\nimport movieReducer from './movieReducer'\n\nexport default combineReducers({\n\tmovie: movieReducer,\n})\n","import { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport rootReducer from './reducers'\n\nconst initialState = {}\n\nconst middleware = [thunk]\n\nconst store = createStore(\n\trootReducer,\n\tinitialState,\n\tapplyMiddleware(...middleware)\n)\n\nexport default store\n","import { FETCH_MOVIE_DATA, FETCH_MOVIE_PLOT } from './../types'\n\nexport function fetchMovieData(name) {\n\treturn async function (dispatch) {\n\t\tconst response = await fetch(\n\t\t\t'http://www.omdbapi.com/?apikey=4f1f7d07&s=' + name,\n\t\t\t{\n\t\t\t\t// mode: 'cors',\n\t\t\t\theaders: {\n\t\t\t\t\t'Access-Control-Allow-Origin': '*',\n\t\t\t\t},\n\t\t\t}\n\t\t)\n\t\tconst responseJson = await response.json()\n\n\t\tdispatch({\n\t\t\ttype: FETCH_MOVIE_DATA,\n\t\t\tpayload: responseJson,\n\t\t})\n\n\t\tif (responseJson.Response === 'True') {\n\t\t\tfor (let i = 0; i < responseJson.Search.length; i++) {\n\t\t\t\tdispatch(fetchMoviePlot(responseJson.Search[i].imdbID))\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport function fetchMoviePlot(id) {\n\treturn async function (dispatch) {\n\t\tconst response = await fetch(\n\t\t\t`http://www.omdbapi.com/?apikey=4f1f7d07&i=${id}&plot=short`\n\t\t)\n\t\tconst responseJson = await response.json()\n\n\t\tdispatch({\n\t\t\ttype: FETCH_MOVIE_PLOT,\n\t\t\tpayload: responseJson,\n\t\t})\n\t}\n}\n","import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { makeStyles } from '@material-ui/core/styles'\nimport {\n\tTypography,\n\tPaper,\n\tBox,\n\tGrid,\n\tTextField,\n\tCard,\n\tCardActionArea,\n\tCardActions,\n\tCardContent,\n\tCardMedia,\n\tButton,\n\tAccordion,\n\tAccordionSummary,\n\tAccordionDetails,\n} from '@material-ui/core'\nimport SearchIcon from '@material-ui/icons/Search'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport ls from 'local-storage'\n//import MovieCard from './movieCard'\n\nimport { fetchMovieData } from './../actions/movieActions'\n\nconst searchResultArraySelector = (state) => state.movie.searchResultArray\nconst searchTotalResultsSelector = (state) => state.movie.totalResults\nconst searchResponseSelector = (state) => state.movie.searchResponse\nconst searchErrorMessageSelector = (state) => state.movie.errorMessage\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\tflexGrow: 1,\n\t\tmargin: 50,\n\t\tdisplay: 'flex',\n\t\tjustifyContent: 'center',\n\t\talignItems: 'center',\n\t\theight: 'auto',\n\t\twidth: 'auto',\n\t},\n\theading: {\n\t\tfontSize: theme.typography.pxToRem(15),\n\t\tflexBasis: '33.33%',\n\t\tflexShrink: 0,\n\t},\n\tsecondaryHeading: {\n\t\tfontSize: theme.typography.pxToRem(15),\n\t},\n\tpaper: {\n\t\tpadding: theme.spacing(2),\n\t},\n\tsearch: {\n\t\twidth: 353,\n\t},\n\tresult: {\n\t\tmarginBottom: 10,\n\t},\n\tcard: {\n\t\tmaxWidth: 450,\n\t},\n\tmedia: {\n\t\theight: 600,\n\t},\n}))\n\nconst Movie = () => {\n\tconst classes = useStyles()\n\tconst dispatch = useDispatch()\n\tconst searchResultsArray = useSelector(searchResultArraySelector)\n\tconst searchTotalResults = useSelector(searchTotalResultsSelector)\n\tconst searchResponse = useSelector(searchResponseSelector)\n\tconst searchErrorMessage = useSelector(searchErrorMessageSelector)\n\tconst [inputValue, setInputValue] = useState('')\n\tconst [nominatedMovies, setNominatedMovies] = useState(\n\t\tJSON.parse(ls.get('nominatedMovies'))\n\t)\n\n\tconst handleInputValue = (value) => {\n\t\tsetInputValue(value)\n\t}\n\n\tconst handleKeyPress = (value) => {\n\t\tif (value === 'Enter') {\n\t\t\tdispatch(fetchMovieData(inputValue))\n\t\t}\n\t}\n\n\tconst handleNominate = (movie) => {\n\t\tif (ls.get('nominatedMovies') === null) {\n\t\t\tls.set('nominatedMovies', JSON.stringify([movie]))\n\t\t\tsetNominatedMovies([movie])\n\t\t} else {\n\t\t\tconst nominatedArray = JSON.parse(ls.get('nominatedMovies'))\n\t\t\tnominatedArray.push(movie)\n\t\t\tls.set('nominatedMovies', JSON.stringify(nominatedArray))\n\t\t\tsetNominatedMovies(nominatedArray)\n\t\t}\n\t}\n\n\tconst handleInnominate = (movie) => {\n\t\tconst nominatedArray = JSON.parse(ls.get('nominatedMovies')).filter(\n\t\t\t(m) => movie.imdbID !== m.imdbID\n\t\t)\n\n\t\tls.set('nominatedMovies', JSON.stringify(nominatedArray))\n\t\tsetNominatedMovies(nominatedArray)\n\t}\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<Grid container spacing={3}>\n\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t<Typography variant=\"h4\">The Shoppies</Typography>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t<Paper className={classes.paper}>\n\t\t\t\t\t\t<Grid container spacing={1} alignItems=\"flex-end\">\n\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t<SearchIcon />\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\tclassName={classes.search}\n\t\t\t\t\t\t\t\t\tlabel=\"Search by Movie Title\"\n\t\t\t\t\t\t\t\t\tvalue={inputValue}\n\t\t\t\t\t\t\t\t\tonChange={(e) => handleInputValue(e.target.value)}\n\t\t\t\t\t\t\t\t\tonKeyDown={(e) => handleKeyPress(e.key)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Paper>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t<Paper className={classes.paper}>\n\t\t\t\t\t\t<Typography variant=\"h4\" className={classes.result}>\n\t\t\t\t\t\t\tMy Nominations\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t{nominatedMovies === null ? (\n\t\t\t\t\t\t\t<Typography variant=\"h5\" className={classes.result}>\n\t\t\t\t\t\t\t\tNone\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<Accordion>\n\t\t\t\t\t\t\t\t<AccordionSummary\n\t\t\t\t\t\t\t\t\texpandIcon={<ExpandMoreIcon />}\n\t\t\t\t\t\t\t\t\taria-controls=\"panel1bh-content\"\n\t\t\t\t\t\t\t\t\tid=\"panel1bh-header\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Typography className={classes.heading}>\n\t\t\t\t\t\t\t\t\t\tTotal Nominations: {nominatedMovies.length}\n\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t<Typography className={classes.secondaryHeading}></Typography>\n\t\t\t\t\t\t\t\t</AccordionSummary>\n\t\t\t\t\t\t\t\t<AccordionDetails>\n\t\t\t\t\t\t\t\t\t<Grid container spacing={3}>\n\t\t\t\t\t\t\t\t\t\t{nominatedMovies.map((movie, i) => (\n\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12} sm={4} key={i}>\n\t\t\t\t\t\t\t\t\t\t\t\t<Card className={classes.card}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<CardActionArea>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CardMedia\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.media}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\timage={movie.Poster}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle=\"Contemplative Reptile\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tgutterBottom\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"h5\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcomponent=\"h2\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{movie.Title}({movie.Year})\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"body2\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"textSecondary\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcomponent=\"p\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{movie.Plot}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</CardContent>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</CardActionArea>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<CardActions>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{nominatedMovies &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnominatedMovies.some(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(m) => m.imdbID === movie.imdbID\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t) ? (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleInnominate(movie)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tInnominate\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleNominate(movie)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tNominate\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</CardActions>\n\t\t\t\t\t\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t</AccordionDetails>\n\t\t\t\t\t\t\t</Accordion>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Paper>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t{searchResultsArray.length === 0 ? null : (\n\t\t\t\t\t\t<Paper className={classes.paper}>\n\t\t\t\t\t\t\t<Typography variant=\"h4\" className={classes.result}>\n\t\t\t\t\t\t\t\tResults for: \"{inputValue}\"\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t{searchResponse ? (\n\t\t\t\t\t\t\t\t<Grid container spacing={3}>\n\t\t\t\t\t\t\t\t\t{searchResultsArray.map((movie, i) => (\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={12} sm={4} key={i}>\n\t\t\t\t\t\t\t\t\t\t\t<Card className={classes.card}>\n\t\t\t\t\t\t\t\t\t\t\t\t<CardActionArea>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<CardMedia\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.media}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\timage={movie.Poster}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle=\"Contemplative Reptile\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tgutterBottom\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"h5\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcomponent=\"h2\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{movie.Title}({movie.Year})\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"body2\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"textSecondary\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcomponent=\"p\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{movie.Plot}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</CardContent>\n\t\t\t\t\t\t\t\t\t\t\t\t</CardActionArea>\n\t\t\t\t\t\t\t\t\t\t\t\t<CardActions>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{nominatedMovies &&\n\t\t\t\t\t\t\t\t\t\t\t\t\tnominatedMovies.some(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(m) => m.imdbID === movie.imdbID\n\t\t\t\t\t\t\t\t\t\t\t\t\t) ? (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleInnominate(movie)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tInnominate\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleNominate(movie)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tNominate\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t</CardActions>\n\t\t\t\t\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t<Grid item xs={12} sm={4}>\n\t\t\t\t\t\t\t\t\t\t{searchTotalResults}\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<Box>{searchErrorMessage}</Box>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Paper>\n\t\t\t\t\t)}\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</div>\n\t)\n}\n\nexport default Movie\n","import React from 'react'\nimport { BrowserRouter as Switch, Route, BrowserRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport Movie from './components/movie'\n\nimport './App.css'\n\nfunction App() {\n\treturn (\n\t\t<Provider store={store}>\n\t\t\t<div className=\"App\">\n\t\t\t\t<BrowserRouter>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route exact path={'/Code-Challenge'} render={() => <Movie />} />\n\t\t\t\t\t</Switch>\n\t\t\t\t</BrowserRouter>\n\t\t\t</div>\n\t\t</Provider>\n\t)\n}\n\nexport default App\n","const reportWebVitals = (onPerfEntry) => {\n\tif (onPerfEntry && onPerfEntry instanceof Function) {\n\t\timport('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n\t\t\tgetCLS(onPerfEntry)\n\t\t\tgetFID(onPerfEntry)\n\t\t\tgetFCP(onPerfEntry)\n\t\t\tgetLCP(onPerfEntry)\n\t\t\tgetTTFB(onPerfEntry)\n\t\t})\n\t}\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}